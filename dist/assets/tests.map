{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","craftberi/tests/adapters/photo.lint-test.js","craftberi/tests/app.lint-test.js","craftberi/tests/helpers/destroy-app.js","craftberi/tests/helpers/destroy-app.lint-test.js","craftberi/tests/helpers/module-for-acceptance.js","craftberi/tests/helpers/module-for-acceptance.lint-test.js","craftberi/tests/helpers/resolver.js","craftberi/tests/helpers/resolver.lint-test.js","craftberi/tests/helpers/start-app.js","craftberi/tests/helpers/start-app.lint-test.js","craftberi/tests/helpers/strip-tags.lint-test.js","craftberi/tests/models/beer.lint-test.js","craftberi/tests/models/brewery.lint-test.js","craftberi/tests/models/dummy.lint-test.js","craftberi/tests/models/photo.lint-test.js","craftberi/tests/models/tap.lint-test.js","craftberi/tests/pods/components/beer-list/component.lint-test.js","craftberi/tests/pods/components/beer-list/item/component.lint-test.js","craftberi/tests/pods/components/eq-sticky/component.lint-test.js","craftberi/tests/pods/components/layout-main/component.lint-test.js","craftberi/tests/pods/components/layout-main/footer/component.lint-test.js","craftberi/tests/pods/components/layout-main/header/component.lint-test.js","craftberi/tests/pods/components/pa-ge/index/component.lint-test.js","craftberi/tests/pods/components/photo-feed/component.lint-test.js","craftberi/tests/pods/components/yandex-map/component.lint-test.js","craftberi/tests/pods/index/route.lint-test.js","craftberi/tests/resolver.lint-test.js","craftberi/tests/router.lint-test.js","craftberi/tests/serializers/photo.lint-test.js","craftberi/tests/test-helper.js","craftberi/tests/test-helper.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('craftberi/tests/adapters/photo.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - adapters/photo.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/photo.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/app.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - app.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('craftberi/tests/helpers/destroy-app.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - helpers/destroy-app.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'craftberi/tests/helpers/start-app', 'craftberi/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _craftberiTestsHelpersStartApp, _craftberiTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _craftberiTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _craftberiTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('craftberi/tests/helpers/module-for-acceptance.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/helpers/resolver', ['exports', 'craftberi/resolver', 'craftberi/config/environment'], function (exports, _craftberiResolver, _craftberiConfigEnvironment) {\n\n  var resolver = _craftberiResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _craftberiConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _craftberiConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('craftberi/tests/helpers/resolver.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - helpers/resolver.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/helpers/start-app', ['exports', 'ember', 'craftberi/app', 'craftberi/config/environment'], function (exports, _ember, _craftberiApp, _craftberiConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _craftberiConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _craftberiApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('craftberi/tests/helpers/start-app.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - helpers/start-app.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/helpers/strip-tags.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - helpers/strip-tags.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/strip-tags.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/models/beer.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - models/beer.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/beer.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/models/brewery.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - models/brewery.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/brewery.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/models/dummy.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - models/dummy.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/dummy.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/models/photo.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - models/photo.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/photo.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/models/tap.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - models/tap.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/tap.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/pods/components/beer-list/component.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/components/beer-list/component.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'pods/components/beer-list/component.js should pass ESLint.\\n5:15  - \\'later\\' is defined but never used. (no-unused-vars)');\n  });\n});","define('craftberi/tests/pods/components/beer-list/item/component.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/components/beer-list/item/component.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/beer-list/item/component.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/pods/components/eq-sticky/component.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/components/eq-sticky/component.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/eq-sticky/component.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/pods/components/layout-main/component.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/components/layout-main/component.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/layout-main/component.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/pods/components/layout-main/footer/component.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/components/layout-main/footer/component.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/layout-main/footer/component.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/pods/components/layout-main/header/component.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/components/layout-main/header/component.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/layout-main/header/component.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/pods/components/pa-ge/index/component.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/components/pa-ge/index/component.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/pa-ge/index/component.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/pods/components/photo-feed/component.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/components/photo-feed/component.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/photo-feed/component.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/pods/components/yandex-map/component.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/components/yandex-map/component.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'pods/components/yandex-map/component.js should pass ESLint.\\n3:8  - \\'computed\\' is defined but never used. (no-unused-vars)\\n3:19  - \\'filterBy\\' is defined but never used. (no-unused-vars)\\n3:29  - \\'reads\\' is defined but never used. (no-unused-vars)');\n  });\n});","define('craftberi/tests/pods/index/route.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - pods/index/route.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/index/route.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/resolver.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - resolver.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/router.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - router.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/serializers/photo.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - serializers/photo.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/photo.js should pass ESLint.\\n');\n  });\n});","define('craftberi/tests/test-helper', ['exports', 'craftberi/tests/helpers/resolver', 'ember-qunit'], function (exports, _craftberiTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_craftberiTestsHelpersResolver['default']);\n});","define('craftberi/tests/test-helper.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint - test-helper.js');\n  QUnit.test('should pass ESLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint.\\n');\n  });\n});","/* jshint ignore:start */\n\nrequire('craftberi/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"tests.js"}